{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "gkehub:v1alpha1",
  "name": "gkehub",
  "canonicalName": "GKE Hub",
  "version": "v1alpha1",
  "revision": "0",
  "title": "GKE Hub",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster",
  "protocol": "rest",
  "rootUrl": "https://gkehub.googleapis.com/",
  "mtlsRootUrl": "https://gkehub.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://gkehub.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`\/`Create`\/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListFeaturesResponse": {
      "id": "ListFeaturesResponse",
      "description": "Response message for the `GkeHubDomainFeatureService.ListFeatures` method.",
      "type": "object",
      "properties": {
        "resources": {
          "description": "The list of Features contained within the parent.",
          "type": "array",
          "items": {
            "$ref": "Feature"
          }
        },
        "nextPageToken": {
          "description": "A token to request the next page of resources from the\n`ListFeatures` method. The value of an empty string means\nthat there are no more resources to return.",
          "type": "string"
        }
      }
    },
    "Feature": {
      "id": "Feature",
      "description": "Feature represents the settings and status of any feature.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The unique name of this feature resource in the format:\n`projects\/[project_id]\/locations\/global\/features\/[feature_id]`.",
          "type": "string"
        },
        "labels": {
          "description": "GCP labels for this feature.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of the feature, limited to 63 characters.",
          "type": "string"
        },
        "servicemeshFeatureSpec": {
          "$ref": "ServiceMeshFeatureSpec"
        },
        "authorizerFeatureSpec": {
          "description": "The specification for the Authorizer Feature.",
          "$ref": "AuthorizerFeatureSpec"
        },
        "multiclusteringressFeatureSpec": {
          "description": "The specification for the Ingress for Anthos feature.",
          "$ref": "MultiClusterIngressFeatureSpec"
        },
        "helloworldFeatureSpec": {
          "description": "A hello world feature to act as an example and test our feature\nlifecycle code.",
          "$ref": "HelloWorldFeatureSpec"
        },
        "meteringFeatureSpec": {
          "description": "The specification for the metering feature.",
          "$ref": "MeteringFeatureSpec"
        },
        "multiclusterservicediscoveryFeatureSpec": {
          "description": "An EAP feature for GKE multi-cluster service discovery.",
          "$ref": "MultiClusterServiceDiscoveryFeatureSpec"
        },
        "configmanagementFeatureSpec": {
          "description": "Feature for Anthos Config Management.",
          "$ref": "ConfigManagementFeatureSpec"
        },
        "featureState": {
          "description": "Output only. State of the resource itself.",
          "$ref": "FeatureState"
        },
        "createTime": {
          "description": "Output only. Timestamp for when the Feature was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Timestamp for when the Feature was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "deleteTime": {
          "description": "Output only. Timestamp for when the Feature was deleted.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ServiceMeshFeatureSpec": {
      "id": "ServiceMeshFeatureSpec",
      "description": "ServiceMeshFeatureSpec contains the input for the service mesh feature.",
      "type": "object",
      "properties": {
      }
    },
    "AuthorizerFeatureSpec": {
      "id": "AuthorizerFeatureSpec",
      "description": "AuthorizerFeatureSpec contains options and specifications for the\nAuthorizer Feature.",
      "type": "object",
      "properties": {
      }
    },
    "MultiClusterIngressFeatureSpec": {
      "id": "MultiClusterIngressFeatureSpec",
      "description": "MultiClusterIngressFeatureSpec contains the input for the MultiClusterIngress\nfeature. This spec is a placeholder and is subject to change.",
      "type": "object",
      "properties": {
        "configMembership": {
          "description": "Fully-qualified member name which hosts the MultiClusterIngress CRD.\nExample member name: `projects\/foo-proj\/locations\/global\/memberships\/bar`",
          "type": "string"
        }
      }
    },
    "HelloWorldFeatureSpec": {
      "id": "HelloWorldFeatureSpec",
      "description": "An empty spec for hello world feature. This is required since Feature proto\nrequires a spec.",
      "type": "object",
      "properties": {
      }
    },
    "MeteringFeatureSpec": {
      "id": "MeteringFeatureSpec",
      "description": "An empty spec for metering feature. This is required since Feature proto\nrequires a spec.",
      "type": "object",
      "properties": {
      }
    },
    "MultiClusterServiceDiscoveryFeatureSpec": {
      "id": "MultiClusterServiceDiscoveryFeatureSpec",
      "description": "An empty spec for multi-cluster service discovery feature. This is required\nsince Feature proto requires a spec.",
      "type": "object",
      "properties": {
      }
    },
    "ConfigManagementFeatureSpec": {
      "id": "ConfigManagementFeatureSpec",
      "description": "Spec for Anthos Config Management (ACM).",
      "type": "object",
      "properties": {
        "membershipConfigs": {
          "description": "Map of Membership IDs to individual configs.",
          "type": "object",
          "additionalProperties": {
            "$ref": "MembershipConfig"
          }
        }
      }
    },
    "MembershipConfig": {
      "id": "MembershipConfig",
      "description": "Configuration for a single cluster. Intended to parallel the ConfigManagement\nCR.",
      "type": "object",
      "properties": {
        "configSync": {
          "description": "Config Sync configuration for the cluster.",
          "$ref": "ConfigSync"
        }
      }
    },
    "ConfigSync": {
      "id": "ConfigSync",
      "description": "Configuration for Config Sync",
      "type": "object",
      "properties": {
        "git": {
          "description": "Git repo configuration for the cluster.",
          "$ref": "GitConfig"
        }
      }
    },
    "GitConfig": {
      "id": "GitConfig",
      "description": "Git repo configuration for a single cluster.",
      "type": "object",
      "properties": {
        "syncRepo": {
          "description": "The URL of the Git repository to use as the source of truth.",
          "type": "string"
        },
        "syncBranch": {
          "description": "The branch of the repository to sync from. Default: master.",
          "type": "string"
        },
        "policyDir": {
          "description": "The path within the Git repository that represents the top level of the\nrepo to sync. Default: the root directory of the repository.",
          "type": "string"
        },
        "syncWaitSecs": {
          "description": "Period in seconds between consecutive syncs. Default: 15.",
          "type": "string",
          "format": "int64"
        },
        "syncRev": {
          "description": "Git revision (tag or hash) to check out. Default HEAD.",
          "type": "string"
        },
        "secretType": {
          "description": "Git revision (tag or hash) to check out. Default HEAD.",
          "type": "string"
        }
      }
    },
    "FeatureState": {
      "id": "FeatureState",
      "description": "FeatureState describes the status of any feature.",
      "type": "object",
      "properties": {
        "lifecycleState": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "SERVICE_UPDATING indicates the Feature is being updated by the Hub\nService."
          ],
          "type": "string",
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "ENABLING",
            "ENABLED",
            "DISABLING",
            "UPDATING",
            "SERVICE_UPDATING"
          ]
        },
        "details": {
          "description": "Aggregate status message of the feature.",
          "$ref": "FeatureStateDetails"
        },
        "detailsByMembership": {
          "description": "Messages pertaining to the current status of the feature for a given\nmember, keyed by the fully-qualified member name.  Example member name\nlooks like `projects\/12345\/locations\/global\/memberships\/bar`.\nThis is scoped to feature-level messages (e.g. CSM state on clusters)",
          "type": "object",
          "additionalProperties": {
            "$ref": "FeatureStateDetails"
          }
        },
        "hasResources": {
          "description": "Indicates this Feature has outstanding resources that need to be cleaned up\nbefore it can be disabled.",
          "type": "boolean"
        }
      }
    },
    "FeatureStateDetails": {
      "id": "FeatureStateDetails",
      "description": "FeatureStateDetails is a semi-structured status message for a declarative\nresource in the API.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The code indicates machine-interpretable status code of the feature. It\nalso allows for an interpretation of the details.",
          "enumDescriptions": [
            "Not set.",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "CODE_UNSPECIFIED",
            "OK",
            "FAILED",
            "WARNING"
          ]
        },
        "description": {
          "description": "Human readable description of the issue.",
          "type": "string"
        },
        "servicemeshFeatureState": {
          "description": "State for the Service Mesh Feature.",
          "$ref": "ServiceMeshFeatureState"
        },
        "authorizerFeatureState": {
          "description": "State for the Authorizer Feature.",
          "$ref": "AuthorizerFeatureState"
        },
        "multiclusteringressFeatureState": {
          "description": "State for the Ingress for Anthos Feature.",
          "$ref": "MultiClusterIngressFeatureState"
        },
        "helloworldFeatureState": {
          "description": "State for the Hello World Feature.",
          "$ref": "HelloWorldFeatureState"
        },
        "meteringFeatureState": {
          "description": "State for the Metering Feature.",
          "$ref": "MeteringFeatureState"
        },
        "multiclusterservicediscoveryFeatureState": {
          "description": "State for the Multi-cluster Service Discovery Feature.",
          "$ref": "MultiClusterServiceDiscoveryFeatureState"
        },
        "configmanagementFeatureState": {
          "description": "State for the Config Management Feature.",
          "$ref": "ConfigManagementFeatureState"
        },
        "updateTime": {
          "description": "The last update time of this status by the controllers",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ServiceMeshFeatureState": {
      "id": "ServiceMeshFeatureState",
      "description": "ServiceMeshFeatureState contains the status fields specific to the\nservice mesh feature. Only those fields that reflect the state of the\nfeature are eligible to be in a feature's state message. These fields are\nexpected to be updated only by the automation and that's usually the\ncontrollers operating on this feature.\n\nThis is currently just a placeholder and more fields will be added when we\nhave more state information to report for this feature.",
      "type": "object",
      "properties": {
      }
    },
    "AuthorizerFeatureState": {
      "id": "AuthorizerFeatureState",
      "description": "AuthorizerFeatureState contains the current detailed state of the Authorizer\nFeature.",
      "type": "object",
      "properties": {
      }
    },
    "MultiClusterIngressFeatureState": {
      "id": "MultiClusterIngressFeatureState",
      "description": "MultiClusterIngressFeatureState contains the status fields specific to the\nMultiClusterIngress feature. This is just a placeholder and more fields will\nbe added when we have more state information to report for this feature.",
      "type": "object",
      "properties": {
      }
    },
    "HelloWorldFeatureState": {
      "id": "HelloWorldFeatureState",
      "description": "An empty state for hello world feature. This is required since\nFeatureStateDetails requires a state.",
      "type": "object",
      "properties": {
      }
    },
    "MeteringFeatureState": {
      "id": "MeteringFeatureState",
      "description": "Metering Feature State.",
      "type": "object",
      "properties": {
        "lastMeasurementTime": {
          "description": "The time stamp of the most recent measurement of the number of vCPUs\nin the cluster.",
          "type": "string",
          "format": "google-datetime"
        },
        "lastMeasuredClusterVcpuCapacity": {
          "description": "The number of vCPUs in the cluster according to the most recent\nmeasurement.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "MultiClusterServiceDiscoveryFeatureState": {
      "id": "MultiClusterServiceDiscoveryFeatureState",
      "description": "An empty state for multi-cluster service discovery feature. This is required\nsince FeatureStateDetails requires a state.",
      "type": "object",
      "properties": {
      }
    },
    "ConfigManagementFeatureState": {
      "id": "ConfigManagementFeatureState",
      "description": "State for Anthos Config Management",
      "type": "object",
      "properties": {
        "clusterName": {
          "description": "The user-defined name for the cluster used by ClusterSelectors to group\nclusters together. This should match Membership's membership_name,\nunless the user installed ACM on the cluster manually prior to enabling\nthe ACM hub feature.\nUnique within a Anthos Config Management installation.",
          "type": "string"
        },
        "membershipConfig": {
          "description": "Membership configuration in the cluster. This represents the actual state\nin the cluster, while the MembershipConfig in the FeatureSpec represents\nthe intended state",
          "$ref": "MembershipConfig"
        },
        "operatorState": {
          "description": "Current install status of ACM's Operator",
          "$ref": "OperatorState"
        },
        "configSyncState": {
          "description": "Current sync status",
          "$ref": "ConfigSyncState"
        }
      }
    },
    "OperatorState": {
      "id": "OperatorState",
      "description": "State information for an ACM's Operator",
      "type": "object",
      "properties": {
        "version": {
          "description": "The semenatic version number of the operator",
          "type": "string"
        },
        "deploymentState": {
          "description": "The state of the Operator's deployment",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "errors": {
          "description": "Install errors.",
          "type": "array",
          "items": {
            "$ref": "InstallError"
          }
        }
      }
    },
    "InstallError": {
      "id": "InstallError",
      "description": "Errors pertaining to the installation of ACM",
      "type": "object",
      "properties": {
        "errorMessage": {
          "description": "A string representing the user facing error message",
          "type": "string"
        }
      }
    },
    "ConfigSyncState": {
      "id": "ConfigSyncState",
      "description": "State information for ConfigSync",
      "type": "object",
      "properties": {
        "version": {
          "description": "The version of ConfigSync deployed",
          "$ref": "ConfigSyncVersion"
        },
        "deploymentState": {
          "description": "Information about the deployment of ConfigSync, including the version\nof the various Pods deployed",
          "$ref": "ConfigSyncDeploymentState"
        },
        "syncState": {
          "description": "The state of ConfigSync's process to sync configs to a cluster",
          "$ref": "SyncState"
        }
      }
    },
    "ConfigSyncVersion": {
      "id": "ConfigSyncVersion",
      "description": "Specific versioning information pertaining to ConfigSync's Pods",
      "type": "object",
      "properties": {
        "importer": {
          "description": "Version of the deployed importer pod",
          "type": "string"
        },
        "syncer": {
          "description": "Version of the deployed syncer pod",
          "type": "string"
        },
        "gitSync": {
          "description": "Version of the deployed git-sync pod",
          "type": "string"
        },
        "monitor": {
          "description": "Version of the deployed monitor pod",
          "type": "string"
        }
      }
    },
    "ConfigSyncDeploymentState": {
      "id": "ConfigSyncDeploymentState",
      "description": "The state of ConfigSync's deployment on a cluster",
      "type": "object",
      "properties": {
        "importer": {
          "description": "Deployment state of the importer pod",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "syncer": {
          "description": "Deployment state of the syncer pod",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "gitSync": {
          "description": "Deployment state of the git-sync pod",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "monitor": {
          "description": "Deployment state of the monitor pod",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        }
      }
    },
    "SyncState": {
      "id": "SyncState",
      "description": "State indicating an ACM's progress syncing configurations to a cluster",
      "type": "object",
      "properties": {
        "sourceToken": {
          "description": "Token indicating the state of the repo.",
          "type": "string"
        },
        "importToken": {
          "description": "Token indicating the state of the importer.",
          "type": "string"
        },
        "syncToken": {
          "description": "Token indicating the state of the syncer.",
          "type": "string"
        },
        "lastSync": {
          "description": "Timestamp of when ACM last successfully synced the repo",
          "type": "string"
        },
        "code": {
          "description": "Sync status code",
          "enumDescriptions": [
            "ACM cannot determine a sync code",
            "ACM successfully synced the git Repo with the cluster",
            "ACM is in the progress of syncing a new change",
            "Indicates an error configuring ACM, and user action is required",
            "ACM has been installed (operator manifest deployed),\nbut not configured.",
            "ACM has not been installed (no operator pod found)",
            "Error authorizing with the cluster",
            "Cluster could not be reached"
          ],
          "type": "string",
          "enum": [
            "SYNC_CODE_UNSPECIFIED",
            "SYNCED",
            "PENDING",
            "ERROR",
            "NOT_CONFIGURED",
            "NOT_INSTALLED",
            "UNAUTHORIZED",
            "UNREACHABLE"
          ]
        },
        "errors": {
          "description": "A list of errors resulting from problematic configs.\nThis list will be truncated after 100 errors, although it is\nunlikely for that many errors to simultaneously exist.",
          "type": "array",
          "items": {
            "$ref": "SyncError"
          }
        }
      }
    },
    "SyncError": {
      "id": "SyncError",
      "description": "An ACM created error representing a problem syncing configurations",
      "type": "object",
      "properties": {
        "code": {
          "description": "An ACM defined error code",
          "type": "string"
        },
        "errorMessage": {
          "description": "A description of the error",
          "type": "string"
        },
        "errorResources": {
          "description": "A list of config(s) associated with the error, if any",
          "type": "array",
          "items": {
            "$ref": "ErrorResource"
          }
        }
      }
    },
    "ErrorResource": {
      "id": "ErrorResource",
      "description": "Model for a config file in the git repo with an associated Sync error",
      "type": "object",
      "properties": {
        "sourcePath": {
          "description": "Path in the git repo of the erroneous config",
          "type": "string"
        },
        "resourceName": {
          "description": "Metadata name of the resource that is causing an error",
          "type": "string"
        },
        "resourceNamespace": {
          "description": "Namespace of the resource that is causing an error",
          "type": "string"
        },
        "resourceGvk": {
          "description": "Group\/version\/kind of the resource that is causing an error",
          "$ref": "GroupVersionKind"
        }
      }
    },
    "GroupVersionKind": {
      "id": "GroupVersionKind",
      "description": "A Kubernetes object's GVK",
      "type": "object",
      "properties": {
        "group": {
          "description": "Kubernetes Group",
          "type": "string"
        },
        "version": {
          "description": "Kubernetes Version",
          "type": "string"
        },
        "kind": {
          "description": "Kubernetes Kind",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\n\n`paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nFor some types of Google Cloud resources, a `binding` can also specify a\n`condition`, which is a logical expression that allows access to a resource\nonly if the expression evaluates to `true`. A condition can add constraints\nbased on attributes of the request, the resource, or both. To learn which\nresources support conditions in their IAM policies, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles\/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles\/resourcemanager.organizationViewer\",\n          \"members\": [\n            \"user:eve@example.com\"\n          ],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles\/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles\/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "rules": {
          "description": "If more than one rule is specified, the rules are applied in the following\nmanner:\n- All matching LOG rules are always applied.\n- If any DENY\/DENY_WITH_LOG rule matches, permission is denied.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if any ALLOW\/ALLOW_WITH_LOG rule matches, permission is\n  granted.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if no rule applies, permission is denied.",
          "type": "array",
          "items": {
            "$ref": "Rule"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        },
        "iamOwned": {
          "type": "boolean"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding.\n\nIf the condition evaluates to `true`, then this binding applies to the\ncurrent request.\n\nIf the condition evaluates to `false`, then this binding does not apply to\nthe current request. However, a different role binding might grant the same\nrole to one or more of the members in this binding.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https:\/\/github.com\/google\/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() < 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language\nsyntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoreChildExemptions": {
          "type": "boolean"
        }
      }
    },
    "Rule": {
      "id": "Rule",
      "description": "A rule to be applied in a Policy.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Human-readable description of the rule.",
          "type": "string"
        },
        "permissions": {
          "description": "A permission is a string of form '<service>.<resource type>.<verb>'\n(e.g., 'storage.buckets.list'). A value of '*' matches all permissions,\nand a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "description": "Required",
          "enumDescriptions": [
            "Default no action.",
            "Matching 'Entries' grant access.",
            "Matching 'Entries' grant access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' deny access.",
            "Matching 'Entries' deny access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' tell IAM.Check callers to generate logs."
          ],
          "type": "string",
          "enum": [
            "NO_ACTION",
            "ALLOW",
            "ALLOW_WITH_LOG",
            "DENY",
            "DENY_WITH_LOG",
            "LOG"
          ]
        },
        "in": {
          "description": "If one or more 'in' clauses are specified, the rule matches if\nthe PRINCIPAL\/AUTHORITY_SELECTOR is in at least one of these entries.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notIn": {
          "description": "If one or more 'not_in' clauses are specified, the rule matches\nif the PRINCIPAL\/AUTHORITY_SELECTOR is in none of the entries.\nThe format for in and not_in entries can be found at in the Local IAM\ndocumentation (see go\/local-iam#features).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditions": {
          "description": "Additional restrictions that must be met. All conditions must pass for the\nrule to match.",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "logConfig": {
          "description": "The config returned to callers of tech.iam.IAM.CheckPolicy for any entries\nthat match the LOG action.",
          "type": "array",
          "items": {
            "$ref": "LogConfig"
          }
        }
      }
    },
    "Condition": {
      "id": "Condition",
      "description": "A condition to be met.",
      "type": "object",
      "properties": {
        "iam": {
          "description": "Trusted attributes supplied by the IAM system.",
          "enumDescriptions": [
            "Default non-attribute.",
            "Either principal or (if present) authority selector.",
            "The principal (even if an authority selector is present), which\nmust only be used for attribution, not authorization.",
            "Any of the security realms in the IAMContext (go\/security-realms).\nWhen used with IN, the condition indicates \"any of the request's realms\nmatch one of the given values; with NOT_IN, \"none of the realms match\nany of the given values\". Note that a value can be:\n - 'self' (i.e., allow connections from clients that are in the same\n security realm)\n - 'self:cloud-region' (i.e., allow connections from clients that are in\n the same cloud region)\n - 'guardians' (i.e., allow connections from its guardian realms. See\n go\/security-realms-glossary#guardian for more information.)\n - a realm (e.g., 'campus-abc')\n - a realm group (e.g., 'realms-for-borg-cell-xx', see: go\/realm-groups)\nA match is determined by a realm group\nmembership check performed by a RealmAclRep object (go\/realm-acl-howto).\nIt is not permitted to grant access based on the *absence* of a realm, so\nrealm conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN\nor DENY\/NOT_IN).",
            "An approver (distinct from the requester) that has authorized this\nrequest.\nWhen used with IN, the condition indicates that one of the approvers\nassociated with the request matches the specified principal, or is a\nmember of the specified group. Approvers can only grant additional\naccess, and are thus only used in a strictly positive context\n(e.g. ALLOW\/IN or DENY\/NOT_IN).",
            "What types of justifications have been supplied with this request.\nString values should match enum names from\nsecurity.credentials.JustificationType, e.g. \"MANUAL_STRING\". It is not\npermitted to grant access based on the *absence* of a justification, so\njustification conditions can only be used in a \"positive\" context\n(e.g., ALLOW\/IN or DENY\/NOT_IN).\n\nMultiple justifications, e.g., a Buganizer ID and a manually-entered\nreason, are normal and supported.",
            "What type of credentials have been supplied with this request.\nString values should match enum names from\nsecurity_loas_l2.CredentialsType - currently, only CREDS_TYPE_EMERGENCY\nis supported.\nIt is not permitted to grant access based on the *absence* of a\ncredentials type, so the conditions can only be used in a \"positive\"\ncontext (e.g., ALLOW\/IN or DENY\/NOT_IN)."
          ],
          "type": "string",
          "enum": [
            "NO_ATTR",
            "AUTHORITY",
            "ATTRIBUTION",
            "SECURITY_REALM",
            "APPROVER",
            "JUSTIFICATION_TYPE",
            "CREDENTIALS_TYPE"
          ]
        },
        "sys": {
          "description": "Trusted attributes supplied by any service that owns resources and uses\nthe IAM system for access control.",
          "enumDescriptions": [
            "Default non-attribute type",
            "Region of the resource",
            "Service name",
            "Resource name",
            "IP address of the caller"
          ],
          "type": "string",
          "enum": [
            "NO_ATTR",
            "REGION",
            "SERVICE",
            "NAME",
            "IP"
          ]
        },
        "svc": {
          "description": "Trusted attributes discharged by the service.",
          "type": "string"
        },
        "op": {
          "description": "An operator to apply the subject with.",
          "enumDescriptions": [
            "Default no-op.",
            "DEPRECATED. Use IN instead.",
            "DEPRECATED. Use NOT_IN instead.",
            "The condition is true if the subject (or any element of it if it is\na set) matches any of the supplied values.",
            "The condition is true if the subject (or every element of it if it is\na set) matches none of the supplied values.",
            "Subject is discharged"
          ],
          "type": "string",
          "enum": [
            "NO_OP",
            "EQUALS",
            "NOT_EQUALS",
            "IN",
            "NOT_IN",
            "DISCHARGED"
          ]
        },
        "values": {
          "description": "The objects of the condition.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LogConfig": {
      "id": "LogConfig",
      "description": "Specifies what kind of log the caller must write",
      "type": "object",
      "properties": {
        "counter": {
          "description": "Counter options.",
          "$ref": "CounterOptions"
        },
        "dataAccess": {
          "description": "Data access options.",
          "$ref": "DataAccessOptions"
        },
        "cloudAudit": {
          "description": "Cloud audit options.",
          "$ref": "CloudAuditOptions"
        }
      }
    },
    "CounterOptions": {
      "id": "CounterOptions",
      "description": "Increment a streamz counter with the specified metric and field names.\n\nMetric names should start with a '\/', generally be lowercase-only,\nand end in \"_count\". Field names should not contain an initial slash.\nThe actual exported metric names will have \"\/iam\/policy\" prepended.\n\nField names correspond to IAM request parameters and field values are\ntheir respective values.\n\nSupported field names:\n   - \"authority\", which is \"[token]\" if IAMContext.token is present,\n     otherwise the value of IAMContext.authority_selector if present, and\n     otherwise a representation of IAMContext.principal; or\n   - \"iam_principal\", a representation of IAMContext.principal even if a\n     token or authority selector is present; or\n   - \"\" (empty string), resulting in a counter with no fields.\n\nExamples:\n  counter { metric: \"\/debug_access_count\"  field: \"iam_principal\" }\n  ==> increment counter \/iam\/policy\/debug_access_count\n                        {iam_principal=[value of IAMContext.principal]}",
      "type": "object",
      "properties": {
        "metric": {
          "description": "The metric to update.",
          "type": "string"
        },
        "field": {
          "description": "The field value to attribute.",
          "type": "string"
        },
        "customFields": {
          "description": "Custom fields.",
          "type": "array",
          "items": {
            "$ref": "CustomField"
          }
        }
      }
    },
    "CustomField": {
      "id": "CustomField",
      "description": "Custom fields.\nThese can be used to create a counter with arbitrary field\/value\npairs.\nSee: go\/rpcsp-custom-fields.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name is the field name.",
          "type": "string"
        },
        "value": {
          "description": "Value is the field value. It is important that in contrast to the\nCounterOptions.field, the value here is a constant that is not\nderived from the IAMContext.",
          "type": "string"
        }
      }
    },
    "DataAccessOptions": {
      "id": "DataAccessOptions",
      "description": "Write a Data Access (Gin) log",
      "type": "object",
      "properties": {
        "logMode": {
          "enumDescriptions": [
            "Client is not required to write a partial Gin log immediately after\nthe authorization check. If client chooses to write one and it fails,\nclient may either fail open (allow the operation to continue) or\nfail closed (handle as a DENY outcome).",
            "The application's operation in the context of which this authorization\ncheck is being made may only be performed if it is successfully logged\nto Gin. For instance, the authorization library may satisfy this\nobligation by emitting a partial log entry at authorization check time\nand only returning ALLOW to the application if it succeeds.\n\nIf a matching Rule has this directive, but the client has not indicated\nthat it will honor such requirements, then the IAM check will result in\nauthorization failure by setting CheckPolicyResponse.success=false."
          ],
          "type": "string",
          "enum": [
            "LOG_MODE_UNSPECIFIED",
            "LOG_FAIL_CLOSED"
          ]
        }
      }
    },
    "CloudAuditOptions": {
      "id": "CloudAuditOptions",
      "description": "Write a Cloud Audit log",
      "type": "object",
      "properties": {
        "logName": {
          "description": "The log_name to populate in the Cloud Audit Record.",
          "enumDescriptions": [
            "Default. Should not be used.",
            "Corresponds to \"cloudaudit.googleapis.com\/activity\"",
            "Corresponds to \"cloudaudit.googleapis.com\/data_access\""
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED_LOG_NAME",
            "ADMIN_ACTIVITY",
            "DATA_ACCESS"
          ]
        },
        "authorizationLoggingOptions": {
          "description": "Information used by the Cloud Audit Logging pipeline.",
          "$ref": "AuthorizationLoggingOptions"
        }
      }
    },
    "AuthorizationLoggingOptions": {
      "id": "AuthorizationLoggingOptions",
      "description": "Authorization-related information used by Cloud Audit Logging.",
      "type": "object",
      "properties": {
        "permissionType": {
          "description": "The type of the permission that was checked.",
          "enumDescriptions": [
            "Default. Should not be used.",
            "A read of admin (meta) data.",
            "A write of admin (meta) data.",
            "A read of standard data.",
            "A write of standard data."
          ],
          "type": "string",
          "enum": [
            "PERMISSION_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "ADMIN_WRITE",
            "DATA_READ",
            "DATA_WRITE"
          ]
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "gkehub.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "includeUnrevealedLocations": {
                  "description": "If true, the returned list will include locations which are not yet\nrevealed.",
                  "location": "query",
                  "type": "boolean"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "gkehub.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "gkehub.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users\/*\/operations`. To\noverride the binding, API services can add a binding such as\n`\"\/v1\/{name=users\/*}\/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "gkehub.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
                },
                "delete": {
                  "id": "gkehub.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "gkehub.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`."
                }
              }
            },
            "global": {
              "resources": {
                "features": {
                  "methods": {
                    "list": {
                      "id": "gkehub.projects.locations.global.features.list",
                      "path": "v1alpha1/{+parent}/features",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/global/features",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "The parent in whose context the features are listed. The\nparent value is in the format: `projects\/[project_id]\/locations\/global`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/global$",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "When requesting a 'page' of resources, `page_size` specifies number of\nresources to return. If unspecified or set to 0, it defaults to 500.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Token returned by previous call to `ListFeatures` which\nspecifies the position in the list from where to continue listing the\nresources.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Lists the Features that match the filter expression. A filter expression\nfilters the resources listed in the response. The expression must be of\nthe form `<field> <operator> <value>` where operators: `<`, `>`, `<=`,\n`>=`,\n`!=`, `=`, `:` are supported (colon `:` represents a HAS operator which is\nroughly synonymous with equality). <field> can refer to a proto or JSON\nfield, or a synthetic field. Field names can be camelCase or snake_case.\n\nExamples:\n- Filter by name:\n  name = \"projects\/foo-proj\/locations\/global\/features\/servicemesh\n\n- Filter by labels:\n  - Resources that have a key called `foo`\n    labels.foo:*\n  - Resources that have a key called `foo` whose value is `bar`\n    labels.foo = bar\n\n- Filter by spec:\n  - ServiceMesh feature with mtls set.\n    servicemesh_feature_spec.mtls = true",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Field to use to sort the list.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListFeaturesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Features in a given project and location."
                    },
                    "get": {
                      "id": "gkehub.projects.locations.global.features.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/global/features/{featuresId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "The Feature resource name in the format:\n`projects\/[project_id]\/locations\/global\/features\/[feature_id]`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/global\/features\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Feature"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single Feature."
                    },
                    "create": {
                      "id": "gkehub.projects.locations.global.features.create",
                      "path": "v1alpha1/{+parent}/features",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/global/features",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "The parent in whose context the feature is created. The parent value is\nin the format: `projects\/[project_id]\/locations\/global`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/global$",
                          "type": "string"
                        },
                        "featureId": {
                          "description": "The ID of one of the supported features.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Feature"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Adds a new Feature."
                    },
                    "delete": {
                      "id": "gkehub.projects.locations.global.features.delete",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/global/features/{featuresId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "The feature resource name in the format:\n`projects\/[project_id]\/locations\/global\/features\/[feature_id]`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/global\/features\/[^\/]+$",
                          "type": "string"
                        },
                        "force": {
                          "description": "If set to true, then the delete will ignore any outstanding resources for\nthis Feature (`FeatureState.has_resources` is set to true). These resources\nwill NOT be cleaned up or modified in any way.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Removes a single Feature."
                    },
                    "patch": {
                      "id": "gkehub.projects.locations.global.features.patch",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/global/features/{featuresId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "The feature resource name in the format:\n`projects\/[project_id]\/locations\/global\/features\/[feature_id]`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/global\/features\/[^\/]+$",
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Mask of fields to update. At least one field path must be specified in this\nmask.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "Feature"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates an existing Feature."
                    }
                  }
                }
              }
            },
            "features": {
              "methods": {
                "setIamPolicy": {
                  "id": "gkehub.projects.locations.features.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/features\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "gkehub.projects.locations.features.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/features\/[^\/]+$",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset."
                },
                "testIamPermissions": {
                  "id": "gkehub.projects.locations.features.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/features\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}