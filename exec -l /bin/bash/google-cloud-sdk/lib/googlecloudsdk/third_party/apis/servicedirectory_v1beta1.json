{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "servicedirectory:v1beta1",
  "name": "servicedirectory",
  "canonicalName": "Service Directory",
  "version": "v1beta1",
  "revision": "0",
  "title": "Service Directory API",
  "description": "Service Directory is a platform for discovering, publishing, and connecting services.\n",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/service-directory",
  "protocol": "rest",
  "rootUrl": "https://servicedirectory.googleapis.com/",
  "mtlsRootUrl": "https://servicedirectory.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://servicedirectory.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "ResolveServiceRequest": {
      "id": "ResolveServiceRequest",
      "description": "The request message for LookupService.ResolveService.\nLooks up a service by its name, returns the service and its endpoints.",
      "type": "object",
      "properties": {
        "maxEndpoints": {
          "description": "Optional. The maximum number of endpoints to return. Defaults to 25. Maximum is 100.\nIf a value less than one is specified, the Default is used.\nIf a value greater than the Maximum is specified, the Maximum is used.",
          "type": "integer",
          "format": "int32"
        },
        "endpointFilter": {
          "description": "Optional. The filter applied to the endpoints of the resolved service.\n\nGeneral filter string syntax:\n<field> <operator> <value> (<logical connector>)\n<field> can be \"name\" or \"metadata.<key>\" for map field.\n<operator> can be \"<, >, <=, >=, !=, =, :\". Of which \":\" means HAS and is\nroughly the same as \"=\".\n<value> must be the same data type as the field.\n<logical connector> can be \"AND, OR, NOT\".\n\nExamples of valid filters:\n* \"metadata.owner\" returns Endpoints that have a label with the\n  key \"owner\", this is the same as \"metadata:owner\"\n* \"metadata.protocol=gRPC\" returns Endpoints that have key\/value\n  \"protocol=gRPC\"\n* \"metadata.owner!=sd AND metadata.foo=bar\" returns\n  Endpoints that have \"owner\" field in metadata with a value that is not\n  \"sd\" AND have the key\/value foo=bar.",
          "type": "string"
        }
      }
    },
    "ResolveServiceResponse": {
      "id": "ResolveServiceResponse",
      "description": "The response message for LookupService.ResolveService.",
      "type": "object",
      "properties": {
        "service": {
          "$ref": "Service"
        }
      }
    },
    "Service": {
      "id": "Service",
      "description": "An individual service. A service contains a name and optional metadata.\nA service must exist before\nendpoints can be\nadded to it.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The resource name for the service in the format\n'projects\/*\/locations\/*\/namespaces\/*\/services\/*'.",
          "type": "string"
        },
        "metadata": {
          "description": "Optional. Metadata for the service. This data can be consumed by service\nclients.  The entire metadata dictionary may contain up to 2000 characters,\nspread across all key-value pairs. Metadata that goes beyond any these\nlimits will be rejected.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "endpoints": {
          "description": "Output only. Endpoints associated with this service. Returned on LookupService.Resolve.\nControl plane clients should use RegistrationService.ListEndpoints.",
          "type": "array",
          "items": {
            "$ref": "Endpoint"
          }
        },
        "hostname": {
          "description": "Optional. Hostname. Service consumer may use for:\n1) HTTP parameter for Host (HTTP\/1.1) or Authority (HTTP\/2, HTTP\/3)\n2) TLS SNI Hostname parameter (most commonly used for HTTPS)\n3) TLS Hostname Authorization against the x509 SAN DNS entries (necessary\n   for HTTPS)\nExample: `service.example.com`\nLimits: Field limited to 255 ASCII characters per\nhttps:\/\/www.ietf.org\/rfc\/rfc1035.txt",
          "type": "string"
        },
        "serviceIdentities": {
          "description": "Optional. Authorized Service Identities. If provided, the consumer may use this\ninformation to determine whether the service provider is authorized.\nExamples:\n `spiffe_id:spiffe:\/\/example.org\/my-service`\n `service_account:my-service@iam.gserviceaccount.com`\nLimits: service_identities list is limited to 10 items.",
          "type": "array",
          "items": {
            "$ref": "ServiceIdentity"
          }
        }
      }
    },
    "Endpoint": {
      "id": "Endpoint",
      "description": "An individual endpoint that provides a\nservice. The service must\nalready exist to create an endpoint.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The resource name for the endpoint in the format\n'projects\/*\/locations\/*\/namespaces\/*\/services\/*\/endpoints\/*'.",
          "type": "string"
        },
        "address": {
          "description": "Optional. An IPv4 or IPv6 address. Service Directory will reject bad\naddresses like:\n  \"8.8.8\"\n  \"8.8.8.8:53\"\n  \"test:bad:address\"\n  \"[::1]\"\n  \"[::1]:8080\"\nLimited to 45 characters.",
          "type": "string"
        },
        "port": {
          "description": "Optional. Service Directory will reject values outside of [0, 65535].",
          "type": "integer",
          "format": "int32"
        },
        "metadata": {
          "description": "Optional. Metadata for the endpoint. This data can be consumed by service\nclients.  The entire metadata dictionary may contain up to 512 characters,\nspread accoss all key-value pairs. Metadata that goes beyond any these\nlimits will be rejected.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ServiceIdentity": {
      "id": "ServiceIdentity",
      "description": "Specifies the Service Identity of the authorized server.",
      "type": "object",
      "properties": {
        "serviceAccount": {
          "description": "service_account: gcp service account, usable with ALTS.\nExample: `my-service@iam.gserviceaccount.com`\nLimits: Limited to 320 characters. https:\/\/tools.ietf.org\/html\/rfc3696",
          "type": "string"
        },
        "spiffeId": {
          "description": "spiffe_id as works with x509 certs with Subject Alternative Name (SAN)\nspecified as uniformResourceIdentifier:*spiffe_id*\nExample: `spiffe:\/\/example.org\/my-service`\nLimits: 2048 ASCII Characters\nhttps:\/\/github.com\/spiffe\/spiffe\/blob\/master\/standards\/SPIFFE-ID.md#23-maximum-spiffe-id-length",
          "type": "string"
        }
      }
    },
    "Namespace": {
      "id": "Namespace",
      "description": "A container for services.\nNamespaces allow administrators to group services together and define\npermissions for a collection of services.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The resource name for the namespace in the format\n'projects\/*\/locations\/*\/namespaces\/*'.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. Resource labels associated with this Namespace.\nNo more than 64 user labels can be associated with a given resource.  Label\nkeys and values can be no longer than 63 characters.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ListNamespacesResponse": {
      "id": "ListNamespacesResponse",
      "description": "The response message for RegistrationService.ListNamespaces.",
      "type": "object",
      "properties": {
        "namespaces": {
          "description": "The list of namespaces.",
          "type": "array",
          "items": {
            "$ref": "Namespace"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "ListServicesResponse": {
      "id": "ListServicesResponse",
      "description": "The response message for RegistrationService.ListServices.",
      "type": "object",
      "properties": {
        "services": {
          "description": "The list of services.",
          "type": "array",
          "items": {
            "$ref": "Service"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        }
      }
    },
    "ListEndpointsResponse": {
      "id": "ListEndpointsResponse",
      "description": "The response message for RegistrationService.ListEndpoints.",
      "type": "object",
      "properties": {
        "endpoints": {
          "description": "The list of endpoints.",
          "type": "array",
          "items": {
            "$ref": "Endpoint"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        }
      }
    },
    "GetIamPolicyRequest": {
      "id": "GetIamPolicyRequest",
      "description": "Request message for `GetIamPolicy` method.",
      "type": "object",
      "properties": {
        "options": {
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to\n`GetIamPolicy`.",
          "$ref": "GetPolicyOptions"
        }
      }
    },
    "GetPolicyOptions": {
      "id": "GetPolicyOptions",
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "type": "object",
      "properties": {
        "requestedPolicyVersion": {
          "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nFor some types of Google Cloud resources, a `binding` can also specify a\n`condition`, which is a logical expression that allows access to a resource\nonly if the expression evaluates to `true`. A condition can add constraints\nbased on attributes of the request, the resource, or both. To learn which\nresources support conditions in their IAM policies, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles\/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles\/resourcemanager.organizationViewer\",\n          \"members\": [\n            \"user:eve@example.com\"\n          ],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles\/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles\/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "rules": {
          "description": "If more than one rule is specified, the rules are applied in the following\nmanner:\n- All matching LOG rules are always applied.\n- If any DENY\/DENY_WITH_LOG rule matches, permission is denied.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if any ALLOW\/ALLOW_WITH_LOG rule matches, permission is\n  granted.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if no rule applies, permission is denied.",
          "type": "array",
          "items": {
            "$ref": "Rule"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        },
        "iamOwned": {
          "type": "boolean"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding.\n\nIf the condition evaluates to `true`, then this binding applies to the\ncurrent request.\n\nIf the condition evaluates to `false`, then this binding does not apply to\nthe current request. However, a different role binding might grant the same\nrole to one or more of the members in this binding.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https:\/\/github.com\/google\/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() < 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language\nsyntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoreChildExemptions": {
          "type": "boolean"
        }
      }
    },
    "Rule": {
      "id": "Rule",
      "description": "A rule to be applied in a Policy.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Human-readable description of the rule.",
          "type": "string"
        },
        "permissions": {
          "description": "A permission is a string of form '<service>.<resource type>.<verb>'\n(e.g., 'storage.buckets.list'). A value of '*' matches all permissions,\nand a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "description": "Required",
          "enumDescriptions": [
            "Default no action.",
            "Matching 'Entries' grant access.",
            "Matching 'Entries' grant access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' deny access.",
            "Matching 'Entries' deny access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' tell IAM.Check callers to generate logs."
          ],
          "type": "string",
          "enum": [
            "NO_ACTION",
            "ALLOW",
            "ALLOW_WITH_LOG",
            "DENY",
            "DENY_WITH_LOG",
            "LOG"
          ]
        },
        "in": {
          "description": "If one or more 'in' clauses are specified, the rule matches if\nthe PRINCIPAL\/AUTHORITY_SELECTOR is in at least one of these entries.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notIn": {
          "description": "If one or more 'not_in' clauses are specified, the rule matches\nif the PRINCIPAL\/AUTHORITY_SELECTOR is in none of the entries.\nThe format for in and not_in entries can be found at in the Local IAM\ndocumentation (see go\/local-iam#features).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditions": {
          "description": "Additional restrictions that must be met. All conditions must pass for the\nrule to match.",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "logConfig": {
          "description": "The config returned to callers of tech.iam.IAM.CheckPolicy for any entries\nthat match the LOG action.",
          "type": "array",
          "items": {
            "$ref": "LogConfig"
          }
        }
      }
    },
    "Condition": {
      "id": "Condition",
      "description": "A condition to be met.",
      "type": "object",
      "properties": {
        "iam": {
          "description": "Trusted attributes supplied by the IAM system.",
          "enumDescriptions": [
            "Default non-attribute.",
            "Either principal or (if present) authority selector.",
            "The principal (even if an authority selector is present), which\nmust only be used for attribution, not authorization.",
            "Any of the security realms in the IAMContext (go\/security-realms).\nWhen used with IN, the condition indicates \"any of the request's realms\nmatch one of the given values; with NOT_IN, \"none of the realms match\nany of the given values\". Note that a value can be:\n - 'self' (i.e., allow connections from clients that are in the same\n security realm)\n - 'self:cloud-region' (i.e., allow connections from clients that are in\n the same cloud region)\n - 'guardians' (i.e., allow connections from its guardian realms. See\n go\/security-realms-glossary#guardian for more information.)\n - a realm (e.g., 'campus-abc')\n - a realm group (e.g., 'realms-for-borg-cell-xx', see: go\/realm-groups)\nA match is determined by a realm group\nmembership check performed by a RealmAclRep object (go\/realm-acl-howto).\nIt is not permitted to grant access based on the *absence* of a realm, so\nrealm conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN\nor DENY\/NOT_IN).",
            "An approver (distinct from the requester) that has authorized this\nrequest.\nWhen used with IN, the condition indicates that one of the approvers\nassociated with the request matches the specified principal, or is a\nmember of the specified group. Approvers can only grant additional\naccess, and are thus only used in a strictly positive context\n(e.g. ALLOW\/IN or DENY\/NOT_IN).",
            "What types of justifications have been supplied with this request.\nString values should match enum names from\nsecurity.credentials.JustificationType, e.g. \"MANUAL_STRING\". It is not\npermitted to grant access based on the *absence* of a justification, so\njustification conditions can only be used in a \"positive\" context\n(e.g., ALLOW\/IN or DENY\/NOT_IN).\n\nMultiple justifications, e.g., a Buganizer ID and a manually-entered\nreason, are normal and supported.",
            "What type of credentials have been supplied with this request.\nString values should match enum names from\nsecurity_loas_l2.CredentialsType - currently, only CREDS_TYPE_EMERGENCY\nis supported.\nIt is not permitted to grant access based on the *absence* of a\ncredentials type, so the conditions can only be used in a \"positive\"\ncontext (e.g., ALLOW\/IN or DENY\/NOT_IN)."
          ],
          "type": "string",
          "enum": [
            "NO_ATTR",
            "AUTHORITY",
            "ATTRIBUTION",
            "SECURITY_REALM",
            "APPROVER",
            "JUSTIFICATION_TYPE",
            "CREDENTIALS_TYPE"
          ]
        },
        "sys": {
          "description": "Trusted attributes supplied by any service that owns resources and uses\nthe IAM system for access control.",
          "enumDescriptions": [
            "Default non-attribute type",
            "Region of the resource",
            "Service name",
            "Resource name",
            "IP address of the caller"
          ],
          "type": "string",
          "enum": [
            "NO_ATTR",
            "REGION",
            "SERVICE",
            "NAME",
            "IP"
          ]
        },
        "svc": {
          "description": "Trusted attributes discharged by the service.",
          "type": "string"
        },
        "op": {
          "description": "An operator to apply the subject with.",
          "enumDescriptions": [
            "Default no-op.",
            "DEPRECATED. Use IN instead.",
            "DEPRECATED. Use NOT_IN instead.",
            "The condition is true if the subject (or any element of it if it is\na set) matches any of the supplied values.",
            "The condition is true if the subject (or every element of it if it is\na set) matches none of the supplied values.",
            "Subject is discharged"
          ],
          "type": "string",
          "enum": [
            "NO_OP",
            "EQUALS",
            "NOT_EQUALS",
            "IN",
            "NOT_IN",
            "DISCHARGED"
          ]
        },
        "values": {
          "description": "The objects of the condition.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LogConfig": {
      "id": "LogConfig",
      "description": "Specifies what kind of log the caller must write",
      "type": "object",
      "properties": {
        "counter": {
          "description": "Counter options.",
          "$ref": "CounterOptions"
        },
        "dataAccess": {
          "description": "Data access options.",
          "$ref": "DataAccessOptions"
        },
        "cloudAudit": {
          "description": "Cloud audit options.",
          "$ref": "CloudAuditOptions"
        }
      }
    },
    "CounterOptions": {
      "id": "CounterOptions",
      "description": "Increment a streamz counter with the specified metric and field names.\n\nMetric names should start with a '\/', generally be lowercase-only,\nand end in \"_count\". Field names should not contain an initial slash.\nThe actual exported metric names will have \"\/iam\/policy\" prepended.\n\nField names correspond to IAM request parameters and field values are\ntheir respective values.\n\nSupported field names:\n   - \"authority\", which is \"[token]\" if IAMContext.token is present,\n     otherwise the value of IAMContext.authority_selector if present, and\n     otherwise a representation of IAMContext.principal; or\n   - \"iam_principal\", a representation of IAMContext.principal even if a\n     token or authority selector is present; or\n   - \"\" (empty string), resulting in a counter with no fields.\n\nExamples:\n  counter { metric: \"\/debug_access_count\"  field: \"iam_principal\" }\n  ==> increment counter \/iam\/policy\/debug_access_count\n                        {iam_principal=[value of IAMContext.principal]}",
      "type": "object",
      "properties": {
        "metric": {
          "description": "The metric to update.",
          "type": "string"
        },
        "field": {
          "description": "The field value to attribute.",
          "type": "string"
        },
        "customFields": {
          "description": "Custom fields.",
          "type": "array",
          "items": {
            "$ref": "CustomField"
          }
        }
      }
    },
    "CustomField": {
      "id": "CustomField",
      "description": "Custom fields.\nThese can be used to create a counter with arbitrary field\/value\npairs.\nSee: go\/rpcsp-custom-fields.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name is the field name.",
          "type": "string"
        },
        "value": {
          "description": "Value is the field value. It is important that in contrast to the\nCounterOptions.field, the value here is a constant that is not\nderived from the IAMContext.",
          "type": "string"
        }
      }
    },
    "DataAccessOptions": {
      "id": "DataAccessOptions",
      "description": "Write a Data Access (Gin) log",
      "type": "object",
      "properties": {
        "logMode": {
          "enumDescriptions": [
            "Client is not required to write a partial Gin log immediately after\nthe authorization check. If client chooses to write one and it fails,\nclient may either fail open (allow the operation to continue) or\nfail closed (handle as a DENY outcome).",
            "The application's operation in the context of which this authorization\ncheck is being made may only be performed if it is successfully logged\nto Gin. For instance, the authorization library may satisfy this\nobligation by emitting a partial log entry at authorization check time\nand only returning ALLOW to the application if it succeeds.\n\nIf a matching Rule has this directive, but the client has not indicated\nthat it will honor such requirements, then the IAM check will result in\nauthorization failure by setting CheckPolicyResponse.success=false."
          ],
          "type": "string",
          "enum": [
            "LOG_MODE_UNSPECIFIED",
            "LOG_FAIL_CLOSED"
          ]
        }
      }
    },
    "CloudAuditOptions": {
      "id": "CloudAuditOptions",
      "description": "Write a Cloud Audit log",
      "type": "object",
      "properties": {
        "logName": {
          "description": "The log_name to populate in the Cloud Audit Record.",
          "enumDescriptions": [
            "Default. Should not be used.",
            "Corresponds to \"cloudaudit.googleapis.com\/activity\"",
            "Corresponds to \"cloudaudit.googleapis.com\/data_access\""
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED_LOG_NAME",
            "ADMIN_ACTIVITY",
            "DATA_ACCESS"
          ]
        },
        "authorizationLoggingOptions": {
          "description": "Information used by the Cloud Audit Logging pipeline.",
          "$ref": "AuthorizationLoggingOptions"
        }
      }
    },
    "AuthorizationLoggingOptions": {
      "id": "AuthorizationLoggingOptions",
      "description": "Authorization-related information used by Cloud Audit Logging.",
      "type": "object",
      "properties": {
        "permissionType": {
          "description": "The type of the permission that was checked.",
          "enumDescriptions": [
            "Default. Should not be used.",
            "A read of admin (meta) data.",
            "A write of admin (meta) data.",
            "A read of standard data.",
            "A write of standard data."
          ],
          "type": "string",
          "enum": [
            "PERMISSION_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "ADMIN_WRITE",
            "DATA_READ",
            "DATA_WRITE"
          ]
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\n\n`paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "servicedirectory.projects.locations.list",
              "path": "v1beta1/{+name}/locations",
              "flatPath": "v1beta1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "includeUnrevealedLocations": {
                  "description": "If true, the returned list will include locations which are not yet\nrevealed.",
                  "location": "query",
                  "type": "boolean"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "servicedirectory.projects.locations.get",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "namespaces": {
              "methods": {
                "create": {
                  "id": "servicedirectory.projects.locations.namespaces.create",
                  "path": "v1beta1/{+parent}/namespaces",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the project and location the namespace\nwill be created in.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "namespaceId": {
                      "description": "Required. The Resource ID must be 1-63 characters long, and comply with\n<a href=\"https:\/\/www.ietf.org\/rfc\/rfc1035.txt\" target=\"_blank\">RFC1035<\/a>.\nSpecifically, the name must be 1-63 characters long and match the regular\nexpression `[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?` which means the first\ncharacter must be a lowercase letter, and all following characters must\nbe a dash, lowercase letter, or digit, except the last character, which\ncannot be a dash.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Namespace"
                  },
                  "response": {
                    "$ref": "Namespace"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a namespace, and returns the new Namespace."
                },
                "list": {
                  "id": "servicedirectory.projects.locations.namespaces.list",
                  "path": "v1beta1/{+parent}/namespaces",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the project and location whose namespaces we'd like to\nlist.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. The filter to list result by.\n\nGeneral filter string syntax:\n<field> <operator> <value> (<logical connector>)\n<field> can be \"name\", or \"labels.<key>\" for map field.\n<operator> can be \"<, >, <=, >=, !=, =, :\". Of which \":\" means HAS, and\nis roughly the same as \"=\".\n<value> must be the same data type as field.\n<logical connector> can be \"AND, OR, NOT\".\n\nExamples of valid filters:\n* \"labels.owner\" returns Namespaces that have a label with the key \"owner\"\n  this is the same as \"labels:owner\".\n* \"labels.protocol=gRPC\" returns Namespaces that have key\/value\n  \"protocol=gRPC\".\n* \"name>projects\/my-project\/locations\/us-east\/namespaces\/namespace-c\"\n  returns Namespaces that have name that is alphabetically later than the\n  string, so \"namespace-e\" will be returned but \"namespace-a\" will not be.\n* \"labels.owner!=sd AND labels.foo=bar\" returns Namespaces that have\n  \"owner\" in label key but value is not \"sd\" AND have key\/value foo=bar.\n* \"doesnotexist.foo=bar\" returns an empty list. Note that Namespace doesn't\n  have a field called \"doesnotexist\". Since the filter does not match any\n  Namespaces, it returns no results.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. The order to list result by.\n\nGeneral order by string syntax:\n<field> (<asc|desc>) (,)\n<field> allows values {\"name\"}\n<asc\/desc> ascending or descending order by <field>. If this is left\nblank, \"asc\" is used.\nNote that an empty order_by string result in default order, which is order\nby name in ascending order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListNamespacesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all namespaces."
                },
                "get": {
                  "id": "servicedirectory.projects.locations.namespaces.get",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the namespace to retrieve.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Namespace"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a namespace."
                },
                "patch": {
                  "id": "servicedirectory.projects.locations.namespaces.patch",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Immutable. The resource name for the namespace in the format\n'projects\/*\/locations\/*\/namespaces\/*'.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. List of fields to be updated in this request.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Namespace"
                  },
                  "response": {
                    "$ref": "Namespace"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a namespace."
                },
                "delete": {
                  "id": "servicedirectory.projects.locations.namespaces.delete",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the namespace to delete.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a namespace. This also deletes all services and endpoints in\nthe namespace."
                },
                "getIamPolicy": {
                  "id": "servicedirectory.projects.locations.namespaces.getIamPolicy",
                  "path": "v1beta1/{+resource}:getIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}:getIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the IAM Policy for a resource (namespace or service only)."
                },
                "setIamPolicy": {
                  "id": "servicedirectory.projects.locations.namespaces.setIamPolicy",
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the IAM Policy for a resource (namespace or service only)."
                },
                "testIamPermissions": {
                  "id": "servicedirectory.projects.locations.namespaces.testIamPermissions",
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Tests IAM permissions for a resource (namespace or service only)."
                }
              }
              ,
              "resources": {
                "services": {
                  "methods": {
                    "resolve": {
                      "id": "servicedirectory.projects.locations.namespaces.services.resolve",
                      "path": "v1beta1/{+name}:resolve",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}:resolve",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the service to resolve.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "ResolveServiceRequest"
                      },
                      "response": {
                        "$ref": "ResolveServiceResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns a service and its\nassociated endpoints.\nResolving a service is not considered an active developer method."
                    },
                    "create": {
                      "id": "servicedirectory.projects.locations.namespaces.services.create",
                      "path": "v1beta1/{+parent}/services",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the namespace this service will belong to.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                          "type": "string"
                        },
                        "serviceId": {
                          "description": "Required. The Resource ID must be 1-63 characters long, and comply with\n<a href=\"https:\/\/www.ietf.org\/rfc\/rfc1035.txt\" target=\"_blank\">RFC1035<\/a>.\nSpecifically, the name must be 1-63 characters long and match the regular\nexpression `[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?` which means the first\ncharacter must be a lowercase letter, and all following characters must\nbe a dash, lowercase letter, or digit, except the last character, which\ncannot be a dash.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Service"
                      },
                      "response": {
                        "$ref": "Service"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a service, and returns the new Service."
                    },
                    "list": {
                      "id": "servicedirectory.projects.locations.namespaces.services.list",
                      "path": "v1beta1/{+parent}/services",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the namespace whose services we'd\nlike to list.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of items to return.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional. The next_page_token value returned from a previous List request,\nif any.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. The filter to list result by.\n\nGeneral filter string syntax:\n<field> <operator> <value> (<logical connector>)\n<field> can be \"name\", or \"metadata.<key>\" for map field.\n<operator> can be \"<, >, <=, >=, !=, =, :\". Of which \":\" means HAS, and\nis roughly the same as \"=\".\n<value> must be the same data type as field.\n<logical connector> can be \"AND, OR, NOT\".\n\nExamples of valid filters:\n* \"metadata.owner\" returns Services that have a label with the key \"owner\"\n  this is the same as \"metadata:owner\".\n* \"metadata.protocol=gRPC\" returns Services that have key\/value\n  \"protocol=gRPC\".\n* \"name>projects\/my-project\/locations\/us-east\/namespaces\/my-namespace\/services\/service-c\"\n  returns Services that have name that is alphabetically later than the\n  string, so \"service-e\" will be returned but \"service-a\" will not be.\n* \"metadata.owner!=sd AND metadata.foo=bar\" returns Services that have\n  \"owner\" in label key but value is not \"sd\" AND have key\/value foo=bar.\n* \"doesnotexist.foo=bar\" returns an empty list. Note that Service doesn't\n  have a field called \"doesnotexist\". Since the filter does not match any\n  Services, it returns no results.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. The order to list result by.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListServicesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists all services belonging to a namespace."
                    },
                    "get": {
                      "id": "servicedirectory.projects.locations.namespaces.services.get",
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the service to get.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Service"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets a service."
                    },
                    "patch": {
                      "id": "servicedirectory.projects.locations.namespaces.services.patch",
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "Immutable. The resource name for the service in the format\n'projects\/*\/locations\/*\/namespaces\/*\/services\/*'.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Required. List of fields to be updated in this request.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "Service"
                      },
                      "response": {
                        "$ref": "Service"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates a service."
                    },
                    "delete": {
                      "id": "servicedirectory.projects.locations.namespaces.services.delete",
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the service to delete.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a service. This also deletes all endpoints associated with\nthe service."
                    },
                    "getIamPolicy": {
                      "id": "servicedirectory.projects.locations.namespaces.services.getIamPolicy",
                      "path": "v1beta1/{+resource}:getIamPolicy",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}:getIamPolicy",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the IAM Policy for a resource (namespace or service only)."
                    },
                    "setIamPolicy": {
                      "id": "servicedirectory.projects.locations.namespaces.services.setIamPolicy",
                      "path": "v1beta1/{+resource}:setIamPolicy",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}:setIamPolicy",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the IAM Policy for a resource (namespace or service only)."
                    },
                    "testIamPermissions": {
                      "id": "servicedirectory.projects.locations.namespaces.services.testIamPermissions",
                      "path": "v1beta1/{+resource}:testIamPermissions",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}:testIamPermissions",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Tests IAM permissions for a resource (namespace or service only)."
                    }
                  }
                  ,
                  "resources": {
                    "endpoints": {
                      "methods": {
                        "create": {
                          "id": "servicedirectory.projects.locations.namespaces.services.endpoints.create",
                          "path": "v1beta1/{+parent}/endpoints",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}/endpoints",
                          "httpMethod": "POST",
                          "parameters": {
                            "parent": {
                              "description": "Required. The resource name of the service that this endpoint provides.",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                              "type": "string"
                            },
                            "endpointId": {
                              "description": "Required. The Resource ID must be 1-63 characters long, and comply with\n<a href=\"https:\/\/www.ietf.org\/rfc\/rfc1035.txt\" target=\"_blank\">RFC1035<\/a>.\nSpecifically, the name must be 1-63 characters long and match the regular\nexpression `[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?` which means the first\ncharacter must be a lowercase letter, and all following characters must\nbe a dash, lowercase letter, or digit, except the last character, which\ncannot be a dash.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "request": {
                            "$ref": "Endpoint"
                          },
                          "response": {
                            "$ref": "Endpoint"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Creates a endpoint, and returns the new Endpoint."
                        },
                        "list": {
                          "id": "servicedirectory.projects.locations.namespaces.services.endpoints.list",
                          "path": "v1beta1/{+parent}/endpoints",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}/endpoints",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. The resource name of the service whose endpoints we'd like to\nlist.",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Optional. The maximum number of items to return.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "Optional. The next_page_token value returned from a previous List request,\nif any.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "description": "Optional. The filter to list result by.\n\nGeneral filter string syntax:\n<field> <operator> <value> (<logical connector>)\n<field> can be \"name\", \"address\", \"port\" or \"metadata.<key>\" for map field.\n<operator> can be \"<, >, <=, >=, !=, =, :\". Of which \":\" means HAS, and\nis roughly the same as \"=\".\n<value> must be the same data type as field.\n<logical connector> can be \"AND, OR, NOT\".\n\nExamples of valid filters:\n* \"metadata.owner\" returns Endpoints that have a label with the key \"owner\"\n  this is the same as \"metadata:owner\".\n* \"metadata.protocol=gRPC\" returns Endpoints that have key\/value\n  \"protocol=gRPC\".\n* \"address=192.108.1.105\" returns Endpoints that have this address.\n* \"port>8080\" returns Endpoints that have port number larger than 8080.\n* \"name>projects\/my-project\/locations\/us-east\/namespaces\/my-namespace\/services\/my-service\/endpoints\/endpoint-c\"\n  returns Endpoints that have name that is alphabetically later than the\n  string, so \"endpoint-e\" will be returned but \"endpoint-a\" will not be.\n* \"metadata.owner!=sd AND metadata.foo=bar\" returns Endpoints that have\n  \"owner\" in label key but value is not \"sd\" AND have key\/value foo=bar.\n* \"doesnotexist.foo=bar\" returns an empty list. Note that Endpoint doesn't\n  have a field called \"doesnotexist\". Since the filter does not match any\n  Endpoints, it returns no results.",
                              "location": "query",
                              "type": "string"
                            },
                            "orderBy": {
                              "description": "Optional. The order to list result by.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListEndpointsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists all endpoints."
                        },
                        "get": {
                          "id": "servicedirectory.projects.locations.namespaces.services.endpoints.get",
                          "path": "v1beta1/{+name}",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}/endpoints/{endpointsId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the endpoint to get.",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+\/endpoints\/[^\/]+$",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Endpoint"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets a endpoint."
                        },
                        "patch": {
                          "id": "servicedirectory.projects.locations.namespaces.services.endpoints.patch",
                          "path": "v1beta1/{+name}",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}/endpoints/{endpointsId}",
                          "httpMethod": "PATCH",
                          "parameters": {
                            "name": {
                              "description": "Immutable. The resource name for the endpoint in the format\n'projects\/*\/locations\/*\/namespaces\/*\/services\/*\/endpoints\/*'.",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+\/endpoints\/[^\/]+$",
                              "type": "string"
                            },
                            "updateMask": {
                              "description": "Required. List of fields to be updated in this request.",
                              "location": "query",
                              "type": "string",
                              "format": "google-fieldmask"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "Endpoint"
                          },
                          "response": {
                            "$ref": "Endpoint"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Updates a endpoint."
                        },
                        "delete": {
                          "id": "servicedirectory.projects.locations.namespaces.services.endpoints.delete",
                          "path": "v1beta1/{+name}",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}/endpoints/{endpointsId}",
                          "httpMethod": "DELETE",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the endpoint to delete.",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+\/endpoints\/[^\/]+$",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Empty"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Deletes a endpoint."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}