{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "accesscontextmanager:v1alpha",
  "name": "accesscontextmanager",
  "canonicalName": "Access Context Manager",
  "version": "v1alpha",
  "revision": "0",
  "title": "Access Context Manager API",
  "description": "An API for setting attribute based access control to requests to GCP services.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/access-context-manager/docs/reference/rest/",
  "protocol": "rest",
  "rootUrl": "https://accesscontextmanager.googleapis.com/",
  "mtlsRootUrl": "https://accesscontextmanager.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://accesscontextmanager.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`\/`Create`\/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "ListAccessPoliciesResponse": {
      "id": "ListAccessPoliciesResponse",
      "description": "A response to `ListAccessPoliciesRequest`.",
      "type": "object",
      "properties": {
        "accessPolicies": {
          "description": "List of the AccessPolicy instances.",
          "type": "array",
          "items": {
            "$ref": "AccessPolicy"
          }
        },
        "nextPageToken": {
          "description": "The pagination token to retrieve the next page of results. If the value is\nempty, no further results remain.",
          "type": "string"
        }
      }
    },
    "AccessPolicy": {
      "id": "AccessPolicy",
      "description": "`AccessPolicy` is a container for `AccessLevels` (which define the necessary\nattributes to use Google Cloud services) and `ServicePerimeters` (which\ndefine regions of services able to freely pass data within a perimeter). An\naccess policy is globally visible within an organization, and the\nrestrictions it specifies apply to all projects within an organization.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Resource name of the `AccessPolicy`. Format:\n`accessPolicies\/{policy_id}`",
          "type": "string"
        },
        "parent": {
          "description": "Required. The parent of this `AccessPolicy` in the Cloud Resource\nHierarchy. Currently immutable once created. Format:\n`organizations\/{organization_id}`",
          "type": "string"
        },
        "title": {
          "description": "Required. Human readable title. Does not affect behavior.",
          "type": "string"
        },
        "etag": {
          "description": "Output only. An opaque identifier for the current version of the\n`AccessPolicy`. This will always be a strongly validated etag, meaning that\ntwo Access Polices will be identical if and only if their etags are\nidentical. Clients should not expect this to be in any specific format.",
          "type": "string"
        }
      }
    },
    "ListAccessLevelsResponse": {
      "id": "ListAccessLevelsResponse",
      "description": "A response to `ListAccessLevelsRequest`.",
      "type": "object",
      "properties": {
        "accessLevels": {
          "description": "List of the Access Level instances.",
          "type": "array",
          "items": {
            "$ref": "AccessLevel"
          }
        },
        "nextPageToken": {
          "description": "The pagination token to retrieve the next page of results. If the value is\nempty, no further results remain.",
          "type": "string"
        }
      }
    },
    "AccessLevel": {
      "id": "AccessLevel",
      "description": "An `AccessLevel` is a label that can be applied to requests to Google Cloud\nservices, along with a list of requirements necessary for the label to be\napplied.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Resource name for the Access Level. The `short_name` component\nmust begin with a letter and only include alphanumeric and '_'. Format:\n`accessPolicies\/{policy_id}\/accessLevels\/{short_name}`. The maximum length\n \/\/ of the `short_name` component is 50 characters.",
          "type": "string"
        },
        "title": {
          "description": "Human readable title. Must be unique within the Policy.",
          "type": "string"
        },
        "description": {
          "description": "Description of the `AccessLevel` and its use. Does not affect behavior.",
          "type": "string"
        },
        "basic": {
          "description": "A `BasicLevel` composed of `Conditions`.",
          "$ref": "BasicLevel"
        },
        "custom": {
          "description": "A `CustomLevel` written in the Common Expression Language.",
          "$ref": "CustomLevel"
        }
      }
    },
    "BasicLevel": {
      "id": "BasicLevel",
      "description": "`BasicLevel` is an `AccessLevel` using a set of recommended features.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Required. A list of requirements for the `AccessLevel` to be granted.",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "combiningFunction": {
          "description": "How the `conditions` list should be combined to determine if a request is\ngranted this `AccessLevel`. If AND is used, each `Condition` in\n`conditions` must be satisfied for the `AccessLevel` to be applied. If OR\nis used, at least one `Condition` in `conditions` must be satisfied for the\n`AccessLevel` to be applied. Default behavior is AND.",
          "enumDescriptions": [
            "All `Conditions` must be true for the `BasicLevel` to be true.",
            "If at least one `Condition` is true, then the `BasicLevel` is true."
          ],
          "type": "string",
          "enum": [
            "AND",
            "OR"
          ]
        }
      }
    },
    "Condition": {
      "id": "Condition",
      "description": "A condition necessary for an `AccessLevel` to be granted. The Condition is an\nAND over its fields. So a Condition is true if: 1) the request IP is from one\nof the listed subnetworks AND 2) the originating device complies with the\nlisted device policy AND 3) all listed access levels are granted AND 4) the\nrequest was sent at a time allowed by the DateTimeRestriction.",
      "type": "object",
      "properties": {
        "ipSubnetworks": {
          "description": "CIDR block IP subnetwork specification. May be IPv4 or IPv6. Note that for\na CIDR IP address block, the specified IP address portion must be properly\ntruncated (i.e. all the host bits must be zero) or the input is considered\nmalformed. For example, \"192.0.2.0\/24\" is accepted but \"192.0.2.1\/24\" is\nnot. Similarly, for IPv6, \"2001:db8::\/32\" is accepted whereas\n\"2001:db8::1\/32\" is not. The originating IP of a request must be in one of\nthe listed subnets in order for this Condition to be true. If empty, all IP\naddresses are allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "devicePolicy": {
          "description": "Device specific restrictions, all restrictions must hold for the\nCondition to be true. If not specified, all devices are allowed.",
          "$ref": "DevicePolicy"
        },
        "requiredAccessLevels": {
          "description": "A list of other access levels defined in the same `Policy`, referenced by\nresource name. Referencing an `AccessLevel` which does not exist is an\nerror. All access levels listed must be granted for the Condition\nto be true. Example:\n\"`accessPolicies\/MY_POLICY\/accessLevels\/LEVEL_NAME\"`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "negate": {
          "description": "Whether to negate the Condition. If true, the Condition becomes a NAND over\nits non-empty fields, each field must be false for the Condition overall to\nbe satisfied. Defaults to false.",
          "type": "boolean"
        },
        "members": {
          "description": "The request must be made by one of the provided user or service\naccounts. Groups are not supported.\nSyntax:\n`user:{emailid}`\n`serviceAccount:{emailid}`\nIf not specified, a request may come from any user.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "description": "The request must originate from one of the provided countries\/regions.\nMust be valid ISO 3166-1 alpha-2 codes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DevicePolicy": {
      "id": "DevicePolicy",
      "description": "`DevicePolicy` specifies device specific restrictions necessary to acquire a\ngiven access level. A `DevicePolicy` specifies requirements for requests from\ndevices to be granted access levels, it does not do any enforcement on the\ndevice. `DevicePolicy` acts as an AND over all specified fields, and each\nrepeated field is an OR over its elements. Any unset fields are ignored. For\nexample, if the proto is { os_type : DESKTOP_WINDOWS, os_type :\nDESKTOP_LINUX, encryption_status: ENCRYPTED}, then the DevicePolicy will be\ntrue for requests originating from encrypted Linux desktops and encrypted\nWindows desktops.",
      "type": "object",
      "properties": {
        "requireScreenlock": {
          "description": "Whether or not screenlock is required for the DevicePolicy to be true.\nDefaults to `false`.",
          "type": "boolean"
        },
        "allowedEncryptionStatuses": {
          "description": "Allowed encryptions statuses, an empty list allows all statuses.",
          "enumDescriptions": [
            "The encryption status of the device is not specified or not known.",
            "The device does not support encryption.",
            "The device supports encryption, but is currently unencrypted.",
            "The device is encrypted."
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ENCRYPTION_UNSPECIFIED",
              "ENCRYPTION_UNSUPPORTED",
              "UNENCRYPTED",
              "ENCRYPTED"
            ]
          }
        },
        "osConstraints": {
          "description": "Allowed OS versions, an empty list allows all types and all versions.",
          "type": "array",
          "items": {
            "$ref": "OsConstraint"
          }
        },
        "allowedDeviceManagementLevels": {
          "description": "Allowed device management levels, an empty list allows all management\nlevels.",
          "enumDescriptions": [
            "The device's management level is not specified or not known.",
            "The device is not managed.",
            "Basic management is enabled, which is generally limited to monitoring and\nwiping the corporate account.",
            "Complete device management. This includes more thorough monitoring and the\nability to directly manage the device (such as remote wiping). This can be\nenabled through the Android Enterprise Platform."
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MANAGEMENT_UNSPECIFIED",
              "NONE",
              "BASIC",
              "COMPLETE"
            ]
          }
        },
        "requireAdminApproval": {
          "description": "Whether the device needs to be approved by the customer admin.",
          "type": "boolean"
        },
        "requireCorpOwned": {
          "description": "Whether the device needs to be corp owned.",
          "type": "boolean"
        }
      }
    },
    "OsConstraint": {
      "id": "OsConstraint",
      "description": "A restriction on the OS type and version of devices making requests.",
      "type": "object",
      "properties": {
        "osType": {
          "description": "Required. The allowed OS type.",
          "enumDescriptions": [
            "The operating system of the device is not specified or not known.",
            "A desktop Mac operating system.",
            "A desktop Windows operating system.",
            "A desktop Linux operating system.",
            "A desktop ChromeOS operating system.",
            "An Android operating system.",
            "An iOS operating system."
          ],
          "type": "string",
          "enum": [
            "OS_UNSPECIFIED",
            "DESKTOP_MAC",
            "DESKTOP_WINDOWS",
            "DESKTOP_LINUX",
            "DESKTOP_CHROME_OS",
            "ANDROID",
            "IOS"
          ]
        },
        "minimumVersion": {
          "description": "The minimum allowed OS version. If not set, any version of this OS\nsatisfies the constraint. Format: `\"major.minor.patch\"`.\nExamples: `\"10.5.301\"`, `\"9.2.1\"`.",
          "type": "string"
        },
        "requireVerifiedChromeOs": {
          "description": "Only allows requests from devices with a verified Chrome OS.\nVerifications includes requirements that the device is enterprise-managed,\nconformant to domain policies, and the caller has permission to call\nthe API targeted by the request.",
          "type": "boolean"
        }
      }
    },
    "CustomLevel": {
      "id": "CustomLevel",
      "description": "`CustomLevel` is an `AccessLevel` using the Cloud Common Expression Language\nto represent the necessary conditions for the level to apply to a request.\nSee CEL spec at: https:\/\/github.com\/google\/cel-spec",
      "type": "object",
      "properties": {
        "expr": {
          "description": "Required. A Cloud CEL expression evaluating to a boolean.",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https:\/\/github.com\/google\/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() < 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language\nsyntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "ListServicePerimetersResponse": {
      "id": "ListServicePerimetersResponse",
      "description": "A response to `ListServicePerimetersRequest`.",
      "type": "object",
      "properties": {
        "servicePerimeters": {
          "description": "List of the Service Perimeter instances.",
          "type": "array",
          "items": {
            "$ref": "ServicePerimeter"
          }
        },
        "nextPageToken": {
          "description": "The pagination token to retrieve the next page of results. If the value is\nempty, no further results remain.",
          "type": "string"
        }
      }
    },
    "ServicePerimeter": {
      "id": "ServicePerimeter",
      "description": "`ServicePerimeter` describes a set of Google Cloud resources which can freely\nimport and export data amongst themselves, but not export outside of the\n`ServicePerimeter`. If a request with a source within this `ServicePerimeter`\nhas a target outside of the `ServicePerimeter`, the request will be blocked.\nOtherwise the request is allowed. There are two types of Service Perimeter -\nRegular and Bridge. Regular Service Perimeters cannot overlap, a single\nGoogle Cloud project can only belong to a single regular Service Perimeter.\nService Perimeter Bridges can contain only Google Cloud projects as members,\na single Google Cloud project may belong to multiple Service Perimeter\nBridges.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Resource name for the ServicePerimeter.  The `short_name`\ncomponent must begin with a letter and only include alphanumeric and '_'.\nFormat: `accessPolicies\/{policy_id}\/servicePerimeters\/{short_name}`",
          "type": "string"
        },
        "title": {
          "description": "Human readable title. Must be unique within the Policy.",
          "type": "string"
        },
        "description": {
          "description": "Description of the `ServicePerimeter` and its use. Does not affect\nbehavior.",
          "type": "string"
        },
        "perimeterType": {
          "description": "Perimeter type indicator. A single project is\nallowed to be a member of single regular perimeter, but multiple service\nperimeter bridges. A project cannot be a included in a perimeter bridge\nwithout being included in regular perimeter. For perimeter bridges,\nthe restricted service list as well as access level lists must be\nempty.",
          "enumDescriptions": [
            "Regular Perimeter.",
            "Perimeter Bridge."
          ],
          "type": "string",
          "enum": [
            "PERIMETER_TYPE_REGULAR",
            "PERIMETER_TYPE_BRIDGE"
          ]
        },
        "status": {
          "description": "Current ServicePerimeter configuration. Specifies sets of resources,\nrestricted services and access levels that determine perimeter\ncontent and boundaries.",
          "$ref": "ServicePerimeterConfig"
        },
        "spec": {
          "description": "Proposed (or dry run) ServicePerimeter configuration. This configuration\nallows to specify and test ServicePerimeter configuration without enforcing\nactual access restrictions. Only allowed to be set when the\n\"use_explicit_dry_run_spec\" flag is set.",
          "$ref": "ServicePerimeterConfig"
        },
        "useExplicitDryRunSpec": {
          "description": "Use explicit dry run spec flag. Ordinarily, a dry-run spec implicitly\nexists  for all Service Perimeters, and that spec is identical to the\nstatus for those Service Perimeters. When this flag is set, it inhibits the\ngeneration of the implicit spec, thereby allowing the user to explicitly\nprovide a configuration (\"spec\") to use in a dry-run version of the Service\nPerimeter. This allows the user to test changes to the enforced config\n(\"status\") without actually enforcing them. This testing is done through\nanalyzing the differences between currently enforced and suggested\nrestrictions. use_explicit_dry_run_spec must bet set to True if any of the\nfields in the spec are set to non-default values.",
          "type": "boolean"
        }
      }
    },
    "ServicePerimeterConfig": {
      "id": "ServicePerimeterConfig",
      "description": "`ServicePerimeterConfig` specifies a set of Google Cloud resources that\ndescribe specific Service Perimeter configuration.",
      "type": "object",
      "properties": {
        "resources": {
          "description": "A list of Google Cloud resources that are inside of the service perimeter.\nCurrently only projects are allowed. Format: `projects\/{project_number}`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accessLevels": {
          "description": "A list of `AccessLevel` resource names that allow resources within the\n`ServicePerimeter` to be accessed from the internet. `AccessLevels` listed\nmust be in the same policy as this `ServicePerimeter`. Referencing a\nnonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are\nlisted, resources within the perimeter can only be accessed via Google\nCloud calls with request origins within the perimeter. Example:\n`\"accessPolicies\/MY_POLICY\/accessLevels\/MY_LEVEL\"`.\nFor Service Perimeter Bridge, must be empty.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "restrictedServices": {
          "description": "Google Cloud services that are subject to the Service Perimeter\nrestrictions. For example, if `storage.googleapis.com` is specified, access\nto the storage buckets inside the perimeter must meet the perimeter's\naccess restrictions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vpcAccessibleServices": {
          "description": "Configuration for APIs allowed within Perimeter.",
          "$ref": "VpcAccessibleServices"
        }
      }
    },
    "VpcAccessibleServices": {
      "id": "VpcAccessibleServices",
      "description": "Specifies how APIs are allowed to communicate within the Service\nPerimeter.",
      "type": "object",
      "properties": {
        "enableRestriction": {
          "description": "Whether to restrict API calls within the Service Perimeter to the list of\nAPIs specified in 'allowed_services'.",
          "type": "boolean"
        },
        "allowedServices": {
          "description": "The list of APIs usable within the Service Perimeter. Must be empty\nunless 'enable_restriction' is True.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListGcpUserAccessBindingsResponse": {
      "id": "ListGcpUserAccessBindingsResponse",
      "description": "Response of ListGcpUserAccessBindings.",
      "type": "object",
      "properties": {
        "gcpUserAccessBindings": {
          "description": "GcpUserAccessBinding",
          "type": "array",
          "items": {
            "$ref": "GcpUserAccessBinding"
          }
        },
        "nextPageToken": {
          "description": "Token to get the next page of items. If blank, there are no more items.",
          "type": "string"
        }
      }
    },
    "GcpUserAccessBinding": {
      "id": "GcpUserAccessBinding",
      "description": "Restricts access to Cloud Console and Google Cloud APIs for a set of users\nusing Context-Aware Access.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. Assigned by the server during creation. The last segment has an arbitrary\nlength and has only URI unreserved characters (as defined by\n[RFC 3986 Section 2.3](https:\/\/tools.ietf.org\/html\/rfc3986#section-2.3)).\nShould not be specified by the client during creation.\nExample: \"organizations\/256\/gcpUserAccessBindings\/b3-BhcX_Ud5N\"",
          "type": "string"
        },
        "groupKey": {
          "description": "Required. Immutable. Google Group id whose members are subject to this binding's restrictions.\nSee \"id\" in the [G Suite Directory API's Groups resource]\n(https:\/\/developers.google.com\/admin-sdk\/directory\/v1\/reference\/groups#resource).\nIf a group's email address\/alias is changed, this resource will continue\nto point at the changed group. This field does not accept group email\naddresses or aliases.\nExample: \"01d520gv4vjcrht\"",
          "type": "string"
        },
        "accessLevels": {
          "description": "Required. Access levels that a user must have to be granted access. This list is\nORed, so the user only needs one (or more) of these access levels.\nExample: \"accessPolicies\/9522\/accessLevels\/device_trusted\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReplaceAccessLevelsRequest": {
      "id": "ReplaceAccessLevelsRequest",
      "description": "A request to replace all existing Access Levels in an Access Policy with\nthe Access Levels provided. This is done atomically.",
      "type": "object",
      "properties": {
        "accessLevels": {
          "description": "Required. The desired Access Levels that should\nreplace all existing Access Levels in the\nAccess Policy.",
          "type": "array",
          "items": {
            "$ref": "AccessLevel"
          }
        },
        "etag": {
          "description": "Optional. The etag for the version of the Access Policy that this\nreplace operation is to be performed on. If, at the time of replace, the\netag for the Access Policy stored in Access Context Manager is different\nfrom the specified etag, then the replace operation will not be performed\nand the call will fail. This field is not required. If etag is not\nprovided, the operation will be performed as if a valid etag is provided.",
          "type": "string"
        }
      }
    },
    "ReplaceServicePerimetersRequest": {
      "id": "ReplaceServicePerimetersRequest",
      "description": "A request to replace all existing Service Perimeters in an Access Policy\nwith the Service Perimeters provided. This is done atomically.",
      "type": "object",
      "properties": {
        "servicePerimeters": {
          "description": "Required. The desired Service Perimeters that should\nreplace all existing Service Perimeters in the\nAccess Policy.",
          "type": "array",
          "items": {
            "$ref": "ServicePerimeter"
          }
        },
        "etag": {
          "description": "Optional. The etag for the version of the Access Policy that this\nreplace operation is to be performed on. If, at the time of replace, the\netag for the Access Policy stored in Access Context Manager is different\nfrom the specified etag, then the replace operation will not be performed\nand the call will fail. This field is not required. If etag is not\nprovided, the operation will be performed as if a valid etag is provided.",
          "type": "string"
        }
      }
    },
    "CommitServicePerimetersRequest": {
      "id": "CommitServicePerimetersRequest",
      "description": "A request to commit dry-run specs in all Service Perimeters belonging to\nan Access\nPolicy.",
      "type": "object",
      "properties": {
        "etag": {
          "description": "Optional. The etag for the version of the Access Policy that this\ncommit operation is to be performed on. If, at the time of commit, the\netag for the Access Policy stored in Access Context Manager is different\nfrom the specified etag, then the commit operation will not be performed\nand the call will fail. This field is not required. If etag is not\nprovided, the operation will be performed as if a valid etag is provided.",
          "type": "string"
        }
      }
    },
    "ReplaceAccessLevelsResponse": {
      "id": "ReplaceAccessLevelsResponse",
      "description": "A response to ReplaceAccessLevelsRequest. This will be put inside of\nOperation.response field.",
      "type": "object",
      "properties": {
        "accessLevels": {
          "description": "List of the Access Level instances.",
          "type": "array",
          "items": {
            "$ref": "AccessLevel"
          }
        }
      }
    },
    "ReplaceServicePerimetersResponse": {
      "id": "ReplaceServicePerimetersResponse",
      "description": "A response to ReplaceServicePerimetersRequest. This will be put inside of\nOperation.response field.",
      "type": "object",
      "properties": {
        "servicePerimeters": {
          "description": "List of the Service Perimeter instances.",
          "type": "array",
          "items": {
            "$ref": "ServicePerimeter"
          }
        }
      }
    },
    "CommitServicePerimetersResponse": {
      "id": "CommitServicePerimetersResponse",
      "description": "A response to CommitServicePerimetersRequest. This will be put inside of\nOperation.response field.",
      "type": "object",
      "properties": {
        "servicePerimeters": {
          "description": "List of all the Service Perimeter instances\nin the Access Policy.",
          "type": "array",
          "items": {
            "$ref": "ServicePerimeter"
          }
        }
      }
    }
  },
  "resources": {
    "operations": {
      "methods": {
        "get": {
          "id": "accesscontextmanager.operations.get",
          "path": "v1alpha/{+name}",
          "flatPath": "v1alpha/operations/{operationsId}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "location": "path",
              "required": true,
              "pattern": "^operations\/.*$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
        }
      }
    },
    "accessPolicies": {
      "methods": {
        "list": {
          "id": "accesscontextmanager.accessPolicies.list",
          "path": "v1alpha/accessPolicies",
          "flatPath": "v1alpha/accessPolicies",
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "description": "Required. Resource name for the container to list AccessPolicy instances\nfrom.\n\nFormat:\n`organizations\/{org_id}`",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "Number of AccessPolicy instances to include in the list. Default 100.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "Next page token for the next batch of AccessPolicy instances. Defaults to\nthe first page of results.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
          ],
          "response": {
            "$ref": "ListAccessPoliciesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "List all AccessPolicies under a\ncontainer."
        },
        "get": {
          "id": "accesscontextmanager.accessPolicies.get",
          "path": "v1alpha/{+name}",
          "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "Required. Resource name for the access policy to get.\n\nFormat `accessPolicies\/{policy_id}`",
              "location": "path",
              "required": true,
              "pattern": "^accessPolicies\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "AccessPolicy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Get an AccessPolicy by name."
        },
        "create": {
          "id": "accesscontextmanager.accessPolicies.create",
          "path": "v1alpha/accessPolicies",
          "flatPath": "v1alpha/accessPolicies",
          "httpMethod": "POST",
          "parameters": {
          },
          "parameterOrder": [
          ],
          "request": {
            "$ref": "AccessPolicy"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Create an `AccessPolicy`. Fails if this organization already has a\n`AccessPolicy`. The longrunning Operation will have a successful status\nonce the `AccessPolicy` has propagated to long-lasting storage.\nSyntactic and basic semantic errors will be returned in `metadata` as a\nBadRequest proto."
        },
        "patch": {
          "id": "accesscontextmanager.accessPolicies.patch",
          "path": "v1alpha/{+name}",
          "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}",
          "httpMethod": "PATCH",
          "parameters": {
            "name": {
              "description": "Output only. Resource name of the `AccessPolicy`. Format:\n`accessPolicies\/{policy_id}`",
              "location": "path",
              "required": true,
              "pattern": "^accessPolicies\/[^\/]+$",
              "type": "string"
            },
            "updateMask": {
              "description": "Required. Mask to control which fields get updated. Must be non-empty.",
              "location": "query",
              "type": "string",
              "format": "google-fieldmask"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "AccessPolicy"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Update an AccessPolicy. The\nlongrunning Operation from this RPC will have a successful status once the\nchanges to the AccessPolicy have propagated\nto long-lasting storage. Syntactic and basic semantic errors will be\nreturned in `metadata` as a BadRequest proto."
        },
        "delete": {
          "id": "accesscontextmanager.accessPolicies.delete",
          "path": "v1alpha/{+name}",
          "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}",
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "description": "Required. Resource name for the access policy to delete.\n\nFormat `accessPolicies\/{policy_id}`",
              "location": "path",
              "required": true,
              "pattern": "^accessPolicies\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Delete an AccessPolicy by resource\nname. The longrunning Operation will have a successful status once the\nAccessPolicy\nhas been removed from long-lasting storage."
        }
      }
      ,
      "resources": {
        "accessLevels": {
          "methods": {
            "list": {
              "id": "accesscontextmanager.accessPolicies.accessLevels.list",
              "path": "v1alpha/{+parent}/accessLevels",
              "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}/accessLevels",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. Resource name for the access policy to list Access Levels from.\n\nFormat:\n`accessPolicies\/{policy_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Number of Access Levels to include in\nthe list. Default 100.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Next page token for the next batch of Access Level instances.\nDefaults to the first page of results.",
                  "location": "query",
                  "type": "string"
                },
                "accessLevelFormat": {
                  "description": "Whether to return `BasicLevels` in the Cloud Common Expression language, as\n`CustomLevels`, rather than as `BasicLevels`. Defaults to returning\n`AccessLevels` in the format they were defined.",
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "LEVEL_FORMAT_UNSPECIFIED",
                    "AS_DEFINED",
                    "CEL"
                  ]
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListAccessLevelsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "List all Access Levels for an access\npolicy."
            },
            "get": {
              "id": "accesscontextmanager.accessPolicies.accessLevels.get",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}/accessLevels/{accessLevelsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. Resource name for the Access Level.\n\nFormat:\n`accessPolicies\/{policy_id}\/accessLevels\/{access_level_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies\/[^\/]+\/accessLevels\/[^\/]+$",
                  "type": "string"
                },
                "accessLevelFormat": {
                  "description": "Whether to return `BasicLevels` in the Cloud Common Expression\nLanguage rather than as `BasicLevels`. Defaults to AS_DEFINED, where\nAccess Levels\nare returned as `BasicLevels` or `CustomLevels` based on how they were\ncreated. If set to CEL, all Access Levels are returned as\n`CustomLevels`. In the CEL case, `BasicLevels` are translated to equivalent\n`CustomLevels`.",
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "LEVEL_FORMAT_UNSPECIFIED",
                    "AS_DEFINED",
                    "CEL"
                  ]
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "AccessLevel"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get an Access Level by resource\nname."
            },
            "create": {
              "id": "accesscontextmanager.accessPolicies.accessLevels.create",
              "path": "v1alpha/{+parent}/accessLevels",
              "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}/accessLevels",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. Resource name for the access policy which owns this Access\nLevel.\n\nFormat: `accessPolicies\/{policy_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "AccessLevel"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Create an Access Level. The longrunning\noperation from this RPC will have a successful status once the Access\nLevel has\npropagated to long-lasting storage. Access Levels containing\nerrors will result in an error response for the first error encountered."
            },
            "patch": {
              "id": "accesscontextmanager.accessPolicies.accessLevels.patch",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}/accessLevels/{accessLevelsId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Required. Resource name for the Access Level. The `short_name` component\nmust begin with a letter and only include alphanumeric and '_'. Format:\n`accessPolicies\/{policy_id}\/accessLevels\/{short_name}`. The maximum length\n \/\/ of the `short_name` component is 50 characters.",
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies\/[^\/]+\/accessLevels\/[^\/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "description": "Required. Mask to control which fields get updated. Must be non-empty.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "AccessLevel"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Update an Access Level. The longrunning\noperation from this RPC will have a successful status once the changes to\nthe Access Level have propagated\nto long-lasting storage. Access Levels containing\nerrors will result in an error response for the first error encountered."
            },
            "delete": {
              "id": "accesscontextmanager.accessPolicies.accessLevels.delete",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}/accessLevels/{accessLevelsId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. Resource name for the Access Level.\n\nFormat:\n`accessPolicies\/{policy_id}\/accessLevels\/{access_level_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies\/[^\/]+\/accessLevels\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Delete an Access Level by resource\nname. The longrunning operation from this RPC will have a successful status\nonce the Access Level has been removed\nfrom long-lasting storage."
            },
            "replaceAll": {
              "id": "accesscontextmanager.accessPolicies.accessLevels.replaceAll",
              "path": "v1alpha/{+parent}/accessLevels:replaceAll",
              "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}/accessLevels:replaceAll",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. Resource name for the access policy which owns these\nAccess Levels.\n\nFormat: `accessPolicies\/{policy_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "ReplaceAccessLevelsRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Replace all existing Access Levels in an Access\nPolicy with\nthe Access Levels provided. This\nis done atomically. The longrunning operation from this RPC will have a\nsuccessful status once all replacements have propagated to long-lasting\nstorage. Replacements containing errors will result in an error response\nfor the first error encountered. Replacement will be cancelled on error\nexisting Access Levels will not\naffected. Operation.response field will contain\nReplaceAccessLevelsResponse. Removing Access Levels contained in\nexisting Service Perimeters will result\nin error."
            }
          }
        },
        "servicePerimeters": {
          "methods": {
            "list": {
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.list",
              "path": "v1alpha/{+parent}/servicePerimeters",
              "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}/servicePerimeters",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. Resource name for the access policy to list Service Perimeters from.\n\nFormat:\n`accessPolicies\/{policy_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Number of Service Perimeters to include\nin the list. Default 100.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Next page token for the next batch of Service Perimeter instances.\nDefaults to the first page of results.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListServicePerimetersResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "List all Service Perimeters for an\naccess policy."
            },
            "get": {
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.get",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}/servicePerimeters/{servicePerimetersId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. Resource name for the Service Perimeter.\n\nFormat:\n`accessPolicies\/{policy_id}\/servicePerimeters\/{service_perimeters_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies\/[^\/]+\/servicePerimeters\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ServicePerimeter"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get a Service Perimeter by resource\nname."
            },
            "create": {
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.create",
              "path": "v1alpha/{+parent}/servicePerimeters",
              "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}/servicePerimeters",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. Resource name for the access policy which owns this Service\nPerimeter.\n\nFormat: `accessPolicies\/{policy_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "ServicePerimeter"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Create a Service Perimeter. The\nlongrunning operation from this RPC will have a successful status once the\nService Perimeter has\npropagated to long-lasting storage. Service Perimeters containing\nerrors will result in an error response for the first error encountered."
            },
            "patch": {
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.patch",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}/servicePerimeters/{servicePerimetersId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Required. Resource name for the ServicePerimeter.  The `short_name`\ncomponent must begin with a letter and only include alphanumeric and '_'.\nFormat: `accessPolicies\/{policy_id}\/servicePerimeters\/{short_name}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies\/[^\/]+\/servicePerimeters\/[^\/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "description": "Required. Mask to control which fields get updated. Must be non-empty.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "ServicePerimeter"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Update a Service Perimeter. The\nlongrunning operation from this RPC will have a successful status once the\nchanges to the Service Perimeter have\npropagated to long-lasting storage. Service Perimeter containing\nerrors will result in an error response for the first error encountered."
            },
            "delete": {
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.delete",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}/servicePerimeters/{servicePerimetersId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. Resource name for the Service Perimeter.\n\nFormat:\n`accessPolicies\/{policy_id}\/servicePerimeters\/{service_perimeter_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies\/[^\/]+\/servicePerimeters\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Delete a Service Perimeter by resource\nname. The longrunning operation from this RPC will have a successful status\nonce the Service Perimeter has been\nremoved from long-lasting storage."
            },
            "replaceAll": {
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.replaceAll",
              "path": "v1alpha/{+parent}/servicePerimeters:replaceAll",
              "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}/servicePerimeters:replaceAll",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. Resource name for the access policy which owns these\nService Perimeters.\n\nFormat: `accessPolicies\/{policy_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "ReplaceServicePerimetersRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Replace all existing Service Perimeters in an\nAccess Policy\nwith the Service Perimeters provided.\nThis is done atomically. The longrunning operation from this RPC will have\na successful status once all replacements have propagated to long-lasting\nstorage. Replacements containing errors will result in an error response\nfor the first error encountered. Replacement will be cancelled on error,\nexisting Service Perimeters will not be\naffected. Operation.response field will contain\nReplaceServicePerimetersResponse."
            },
            "commit": {
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.commit",
              "path": "v1alpha/{+parent}/servicePerimeters:commit",
              "flatPath": "v1alpha/accessPolicies/{accessPoliciesId}/servicePerimeters:commit",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. Resource name for the parent Access Policy which owns all\nService Perimeters in scope\nfor the commit operation.\n\nFormat: `accessPolicies\/{policy_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "CommitServicePerimetersRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Commit the dry-run spec for all the Service Perimeters in an\nAccess Policy.\nA commit operation on a Service Perimeter involves copying its `spec` field\nto that Service Perimeter's `status` field. Only Service Perimeters with\n`use_explicit_dry_run_spec` field set to true are affected by a commit\noperation. The longrunning operation from this RPC will have a successful\nstatus once the dry-run specs for all the Service Perimeters have been\ncommitted. If a commit fails, it will cause the longrunning operation to\nreturn an error response and the entire commit operation will be cancelled.\nWhen successful, Operation.response field will contain\nCommitServicePerimetersResponse. The `dry_run` and the `spec` fields will\nbe cleared after a successful commit operation."
            }
          }
        }
      }
    },
    "organizations": {
      "resources": {
        "gcpUserAccessBindings": {
          "methods": {
            "list": {
              "id": "accesscontextmanager.organizations.gcpUserAccessBindings.list",
              "path": "v1alpha/{+parent}/gcpUserAccessBindings",
              "flatPath": "v1alpha/organizations/{organizationsId}/gcpUserAccessBindings",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. Example: \"organizations\/256\"",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Optional. Maximum number of items to return. The server may return fewer items.\nIf left blank, the server may return any number of items.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Optional. If left blank, returns the first page. To enumerate all items, use the\nnext_page_token\nfrom your previous list operation.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListGcpUserAccessBindingsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists all GcpUserAccessBindings for a\nGoogle Cloud organization."
            },
            "get": {
              "id": "accesscontextmanager.organizations.gcpUserAccessBindings.get",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/organizations/{organizationsId}/gcpUserAccessBindings/{gcpUserAccessBindingsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. Example: \"organizations\/256\/gcpUserAccessBindings\/b3-BhcX_Ud5N\"",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+\/gcpUserAccessBindings\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GcpUserAccessBinding"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the GcpUserAccessBinding with\nthe given name."
            },
            "create": {
              "id": "accesscontextmanager.organizations.gcpUserAccessBindings.create",
              "path": "v1alpha/{+parent}/gcpUserAccessBindings",
              "flatPath": "v1alpha/organizations/{organizationsId}/gcpUserAccessBindings",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. Example: \"organizations\/256\"",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GcpUserAccessBinding"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Creates a GcpUserAccessBinding. If the\nclient specifies a name,\nthe server will ignore it. Fails if a resource already exists with the same\ngroup_key.\nTo add more access levels to a group, update the existing resource instead.\nCompletion of this long-running operation does not necessarily signify that\nthe new binding is deployed onto all affected users, which may take more\ntime."
            },
            "patch": {
              "id": "accesscontextmanager.organizations.gcpUserAccessBindings.patch",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/organizations/{organizationsId}/gcpUserAccessBindings/{gcpUserAccessBindingsId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Immutable. Assigned by the server during creation. The last segment has an arbitrary\nlength and has only URI unreserved characters (as defined by\n[RFC 3986 Section 2.3](https:\/\/tools.ietf.org\/html\/rfc3986#section-2.3)).\nShould not be specified by the client during creation.\nExample: \"organizations\/256\/gcpUserAccessBindings\/b3-BhcX_Ud5N\"",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+\/gcpUserAccessBindings\/[^\/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "description": "Required. Only the fields specified in this mask are updated. Because name and\ngroup_key cannot be changed, update_mask is required and must always be:\n\nupdate_mask {\npaths: \"access_levels\"\n}",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GcpUserAccessBinding"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates a GcpUserAccessBinding.\nCompletion of this long-running operation does not necessarily signify that\nthe changed binding is deployed onto all affected users, which may take\nmore time."
            },
            "delete": {
              "id": "accesscontextmanager.organizations.gcpUserAccessBindings.delete",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/organizations/{organizationsId}/gcpUserAccessBindings/{gcpUserAccessBindingsId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. Example: \"organizations\/256\/gcpUserAccessBindings\/b3-BhcX_Ud5N\"",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+\/gcpUserAccessBindings\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Deletes a GcpUserAccessBinding.\nCompletion of this long-running operation does not necessarily signify that\nthe binding deletion is deployed onto all affected users, which may take\nmore time."
            }
          }
        }
      }
    }
  },
  "basePath": ""
}